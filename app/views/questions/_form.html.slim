= simple_form_for question, :remote => true, :html => { :id => "questions_#{question.role_type}" } do |f|
  = f.association :category, :input_html => {:id => "select_#{question.role_type}", :class => "chosen-select", :data => {:placeholder => "Escolha um assunto" }}, :wrapper_html => {:class => :hidden }

  // Using data-form-type for filtering on the forms (truth or dare will be generated on type)
  h4.hidden.placeholder
    - phrase = (question.role_type == "truth" ? "Sr. candidato é verdade que..." : "Sr. candidato você deverá...")
    = phrase
  = f.input :text, :label => phrase, :input_html => {:id => "question_text_#{question.role_type}", :placeholder => "#{phrase}", :data => {:"form-type" => question.role_type} }
  = f.hidden_field :role_type, :value => question.role_type, :id => "question_role_type_#{question.role_type}"
  = f.button :button, "Cancelar", :type => :reset, :class => "hidden reset", :"data-form-type" => question.role_type

  // TODO: Work on validation if the user is currently logged in or not.
  = f.submit "Publicar!", :class => :hidden
  = f.button :button, "Pré-visualizar", :type => :reset, :class => "hidden preview", :"data-form-type" => question.role_type
  .preview.hidden
    - if signed_in?
      = f.submit "Enviar", :class => :hidden, :disable_with => "Enviando..."
    - else
      = f.submit "Publicar usando Facebook", :class => :hidden, :"data-provider" => :facebook
      = f.submit "Publicar usando MeuRio", :class => :hidden, :"data-provider" => :meurio
